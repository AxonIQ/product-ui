/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/space/{spaceId}/context/{contextId}": {
    put: operations["replaceContext"];
    delete: operations["deleteContext"];
  };
  "/api/space/{spaceId}/billing/{billingAccountId}/update": {
    put: operations["updateAccount"];
  };
  "/api/admin/terms": {
    put: operations["updateTermsAndConditionsPublicationDate"];
  };
  "/api/account": {
    get: operations["getCurrentAccount"];
    put: operations["updateAccountData"];
    delete: operations["deleteCurrentAccount"];
  };
  "/api/space": {
    post: operations["create"];
  };
  "/api/space/{spaceId}/invite": {
    post: operations["generateInviteToSpace"];
  };
  "/api/space/{spaceId}/context": {
    get: operations["findContextsOfCurrentSpace"];
    post: operations["createContext"];
  };
  "/api/space/{spaceId}/cluster": {
    get: operations["getCluster"];
    post: operations["createCluster"];
  };
  "/api/space/{spaceId}/billing/pay": {
    post: operations["pay"];
  };
  "/api/space/{spaceId}/billing/initialize": {
    post: operations["createAccount"];
  };
  "/api/space/{spaceId}/billing/authorize/{billingAccountId}": {
    post: operations["authorize"];
  };
  "/api/space/{spaceId}/application": {
    get: operations["findSpaceApplicationsOfCurrentUser"];
    post: operations["create_1"];
  };
  "/api/admin/custom-cluster": {
    post: operations["createCustomCluster"];
    delete: operations["deleteCustomCluster"];
  };
  "/api/admin/billing/{billingAccountId}/credits": {
    post: operations["addCredits"];
  };
  "/api/admin/billing/space/{spaceId}/billing/{billingAccountId}/recalculate-saas-usage": {
    post: operations["recalculate"];
  };
  "/api/account/register": {
    post: operations["register"];
  };
  "/api/account/pat": {
    post: operations["generatePAT"];
  };
  "/api/space/{spaceId}/member/{accountId}/owner": {
    patch: operations["transferSpaceOwnership"];
  };
  "/api/space/{spaceId}/member/{accountId}/grant-permission/{role}": {
    patch: operations["grantPermissionForMemberInSpace"];
  };
  "/api/space/{spaceId}/member/{accountId}/disable": {
    patch: operations["disableUserInSpace"];
  };
  "/api/space/{spaceId}/invite/{inviteId}": {
    delete: operations["deactivateInviteForSpace"];
    patch: operations["acceptInviteForSpace"];
  };
  "/api/space/{spaceId}/application/{id}/contexts": {
    patch: operations["bindContextsToApplication"];
  };
  "/api/dashboard/processors/{processor}/loadbalance": {
    patch: operations["loadBalance"];
  };
  "/api/dashboard/processors/{processor}/autoloadbalance": {
    patch: operations["autoLoadBalanceSetup"];
  };
  "/api/dashboard/clients/{client}/processors/{processor}/start": {
    patch: operations["start"];
  };
  "/api/dashboard/clients/{client}/processors/{processor}/segments/split": {
    patch: operations["splitSegment"];
  };
  "/api/dashboard/clients/{client}/processors/{processor}/segments/merge": {
    patch: operations["mergeSegment"];
  };
  "/api/dashboard/clients/{client}/processors/{processor}/pause": {
    patch: operations["pause"];
  };
  "/api/admin/space/{spaceId}/member/{accountId}": {
    delete: operations["dissociateAccountFromSpace"];
    patch: operations["associateAccountWithSpace"];
  };
  "/api/admin/billing/space/{spaceId}/billing/{billingAccountId}/generate-invoice": {
    patch: operations["generateInvoice"];
  };
  "/api/terms": {
    get: operations["getTermsAndConditionsPublicationDate"];
  };
  "/api/space/{spaceId}": {
    get: operations["findSpaceById"];
    delete: operations["deleteSpace"];
  };
  "/api/space/{spaceId}/statistics": {
    get: operations["statistics"];
  };
  "/api/space/{spaceId}/name": {
    get: operations["findSpaceName"];
  };
  "/api/space/{spaceId}/member": {
    get: operations["getCurrentMember"];
    delete: operations["dissociateCurrentAccountFromSpace"];
  };
  "/api/space/{spaceId}/member/all": {
    get: operations["getMembersFromSpace"];
  };
  "/api/space/{spaceId}/invite/all": {
    get: operations["findAllInvitesForSpace"];
  };
  "/api/space/{spaceId}/custom-cluster": {
    get: operations["getCustomClustersBySpaceId"];
  };
  "/api/space/{spaceId}/custom-cluster/{clusterId}": {
    get: operations["getCustomCluster"];
  };
  "/api/space/{spaceId}/custom-cluster/updates": {
    get: operations["updates"];
  };
  "/api/space/{spaceId}/context/{id}": {
    get: operations["findContextBySpaceAndId"];
  };
  "/api/space/{spaceId}/context/updates": {
    get: operations["updates_1"];
  };
  "/api/space/{spaceId}/cluster/{clusterId}": {
    get: operations["getCluster_1"];
    delete: operations["deleteCluster"];
  };
  "/api/space/{spaceId}/cluster/{clusterId}/contexts": {
    get: operations["getClusterContexts"];
  };
  "/api/space/{spaceId}/cluster/updates": {
    get: operations["updates_2"];
  };
  "/api/space/{spaceId}/billing/{billingAccountId}/history": {
    get: operations["getHistory"];
  };
  "/api/space/{spaceId}/billing/{billingAccountId}/card-details": {
    get: operations["getCardDetails"];
  };
  "/api/space/{spaceId}/billing/entity": {
    get: operations["getBillingAccountEntity"];
  };
  "/api/space/{spaceId}/billing/account": {
    get: operations["getBillingAccount"];
  };
  "/api/space/{spaceId}/billing/account/{id}": {
    get: operations["getBillingAccount_1"];
  };
  "/api/space/{spaceId}/application/{id}": {
    get: operations["findSpaceApplicationById"];
    delete: operations["delete"];
  };
  "/api/space/{spaceId}/application/updates": {
    get: operations["applicationUpdates"];
  };
  "/api/space/updates": {
    get: operations["updates_3"];
  };
  "/api/space/all": {
    get: operations["findSpacesOfCurrentUser"];
  };
  "/api/public/version": {
    get: operations["versionInfo"];
  };
  "/api/public/price/context": {
    get: operations["calculateContextPrice"];
  };
  "/api/public/price/cluster": {
    get: operations["calculateClusterPrice"];
  };
  "/api/public/auth/token/refresh": {
    get: operations["refresh"];
  };
  "/api/public/auth/pat/exchange": {
    get: operations["exchange"];
  };
  "/api/properties/user-app": {
    get: operations["getUserApplicationConfig"];
  };
  "/api/options/states/{country}": {
    get: operations["getStatesForCountry"];
  };
  "/api/options/space/roles": {
    get: operations["getMemberRoles"];
  };
  "/api/options/regions/{cloud-provider}": {
    get: operations["getRegionsByCloudProviders"];
  };
  "/api/options/loadbalance/strategies": {
    get: operations["getLoadBalanceStrategies"];
  };
  "/api/options/countries": {
    get: operations["getCountries"];
  };
  "/api/options/context/context-types": {
    get: operations["findContextTypes"];
  };
  "/api/options/context/context-regions": {
    get: operations["findContextRegions"];
  };
  "/api/options/context/context-cloud-providers": {
    get: operations["findContextCloudProviders"];
  };
  "/api/options/cluster/cluster-types": {
    get: operations["getClusterTypes"];
  };
  "/api/options/cluster/cluster-regions/{provider}": {
    get: operations["findClusterRegionsByProvider"];
  };
  "/api/options/cluster/cluster-providers": {
    get: operations["getClusterProviders"];
  };
  "/api/options/cloud-providers": {
    get: operations["getCloudProviders"];
  };
  "/api/options/billing/config/{provider}": {
    get: operations["getPaymentProviderConfig"];
  };
  "/api/dashboard/spaces/{spaceId}/updates": {
    get: operations["updates_4"];
  };
  "/api/dashboard/spaces/{spaceId}/applications": {
    get: operations["getConnectedApplications"];
  };
  "/api/billing/{billingAccountId}/credits": {
    get: operations["getCreditsBalanceByAccount"];
  };
  "/api/billing/{billingAccountId}/credits/{creditsId}": {
    get: operations["getCreditsBalanceByAccountAndCredit"];
  };
  "/api/admin/space/application/all": {
    get: operations["applications"];
  };
  "/api/admin/space/all": {
    get: operations["spaces"];
  };
  "/api/admin/replication-group/all": {
    get: operations["replicationGroups"];
  };
  "/api/admin/custom-cluster/all": {
    get: operations["getAllCustomClusters"];
  };
  "/api/admin/context/all": {
    get: operations["contexts"];
  };
  "/api/admin/cluster/all": {
    get: operations["clusters"];
  };
  "/api/admin/billing/saas-usage/all": {
    get: operations["getAllUsage"];
  };
  "/api/admin/billing/billing-account/all": {
    get: operations["getAllBillingAccounts"];
  };
  "/api/admin/account/all": {
    get: operations["getAllAccounts"];
  };
  "/api/account/updates": {
    get: operations["accountUpdates"];
  };
  "/api/account/pat/all": {
    get: operations["listPAT"];
  };
  "/api/space/{spaceId}/billing/{billingAccountId}": {
    delete: operations["removeBillingAccount"];
  };
  "/api/admin/space/{spaceId}": {
    delete: operations["deleteSpaceByAdmin"];
  };
  "/api/admin/billing/{billingAccountId}/credits/{creditsId}": {
    delete: operations["removeCredits"];
  };
  "/api/admin/account/{accountId}": {
    delete: operations["deleteAccount"];
  };
  "/api/account/pat/{id}": {
    delete: operations["deletePAT"];
  };
}

export interface components {
  schemas: {
    Error: {
      error?: string;
      type?: string;
      message?: string;
      /** Format: date-time */
      timestamp?: string;
    };
    AddressDTO: {
      line1?: string;
      city?: string;
      state?: string;
      country?: string;
    };
    CustomerDTO: {
      name?: string;
      email?: string;
      vatNumber?: string;
      address?: components["schemas"]["AddressDTO"];
    };
    PaymentsResponseDTO: {
      resultCode?: string;
    };
    TermsAndConditionsRequestDTO: {
      /** Format: date-time */
      publicationDate?: string;
    };
    AccountData: {
      firstName?: string;
      lastName?: string;
      email?: string;
      role?: string;
      organisationName?: string;
    };
    SpaceRequestDTO: {
      name?: string;
    };
    InviteRequestDTO: {
      name?: string;
      /** Format: date-time */
      expirationDate?: string;
    };
    ContextRequestDTO: {
      contextName?: string;
      contextProperties?: { [key: string]: string };
      /** Format: uuid */
      clusterId?: string;
    };
    ClusterRequestDTO: {
      clusterName?: string;
      clusterProvider?: string;
      clusterRegion?: string;
      clusterType?: string;
    };
    MakePaymentDTO: {
      paymentMethodId?: string;
      amount?: number;
      description?: string;
    };
    PaymentProviderResponseDTO: {
      providerData?: { [key: string]: { [key: string]: unknown } };
    };
    ApplicationRequestDTO: {
      name?: string;
      contexts?: string[];
    };
    ApplicationTokenDTO: {
      applicationId?: string;
      applicationToken?: string;
    };
    CreateCustomClusterRequestDTO: {
      spaceId?: string;
      /** Format: uuid */
      clusterId?: string;
      clusterName?: string;
      clusterProvider?: string;
      replicationGroupName?: string;
    };
    CreditsRequestDto: {
      description?: string;
      amount?: number;
      currency?: string;
      /** Format: int32 */
      numberOfMonths?: number;
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      expirationDate?: string;
    };
    BindContextsToApplicationDTO: {
      applicationId?: string;
      contextIds?: string[];
    };
    MonoVoid: { [key: string]: unknown };
    TermsAndConditionsResponseDTO: {
      /** Format: date-time */
      publicationDate?: string;
    };
    SpaceDTO: {
      id?: string;
      name?: string;
      /** Format: uuid */
      spaceOwner?: string;
      accountMembers?: string[];
      /** Format: int32 */
      contextsCreated?: number;
      /** Format: uuid */
      billingAccountId?: string;
    };
    StatisticsDTO: {
      numberOfCommandMessagesSent?: number;
      numberOfCommandMessagesReceived?: number;
      numberOfEventMessagesSent?: number;
      numberOfEventMessagesReceived?: number;
      numberOfQueryMessagesSent?: number;
      numberOfQueryMessagesReceived?: number;
      contextName?: string;
      paidContext?: boolean;
      totalNumberOfMessages?: number;
    };
    SpaceNameDTO: {
      spaceId?: string;
      name?: string;
    };
    SpaceMemberDTO: {
      /** Format: uuid */
      accountId?: string;
      firstName?: string;
      lastName?: string;
      email?: string;
      role?: string;
    };
    SpaceInviteDTO: {
      /** Format: int64 */
      id?: number;
      inviteId?: string;
      spaceId?: string;
      name?: string;
      /** Format: int32 */
      timesUsed?: number;
      /** @enum {string} */
      status?: "INACTIVE" | "ACTIVE";
      /** Format: date-time */
      expirationDate?: string;
    };
    CustomClusterDTO: {
      /** Format: uuid */
      id?: string;
      clusterName?: string;
      spaceId?: string;
      clusterProvider?: string;
      clusterType?: string;
    };
    FluxServerSentEventCustomClusterDTO: {
      /** Format: int32 */
      prefetch?: number;
    };
    ContextDTO: {
      contextId?: string;
      contextName?: string;
      spaceId?: string;
      type?: string;
      free?: boolean;
      contextStatus?: string;
      region?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: date-time */
      scheduledCleanupTime?: string;
      /** Format: uuid */
      clusterId?: string;
      contextClusterType?: string;
    };
    FluxServerSentEventContextDTO: {
      /** Format: int32 */
      prefetch?: number;
    };
    ClusterDTO: {
      /** Format: uuid */
      id?: string;
      clusterName?: string;
      spaceId?: string;
      /** @enum {string} */
      clusterStatus?:
        | "CREATE_PENDING"
        | "CREATED"
        | "CREATE_FAILED"
        | "REMOVE_PENDING"
        | "REMOVED"
        | "REMOVE_FAILED";
      clusterType?: string;
      clusterProvider?: string;
      clusterRegion?: string;
    };
    FluxServerSentEventClusterDTO: {
      /** Format: int32 */
      prefetch?: number;
    };
    PaymentHistoryDTO: {
      /** Format: int64 */
      id?: number;
      /** Format: uuid */
      billingAccountId?: string;
      amount?: number;
      description?: string;
      /** Format: date-time */
      date?: string;
      invoiceUrl?: string;
    };
    SpaceBillingDTO: {
      /** Format: uuid */
      billingAccountId?: string;
      spaceId?: string;
      /** Format: date-time */
      lastInvoiceTime?: string;
      /** Format: date-time */
      lastBillingTime?: string;
    };
    Address: {
      line1?: string;
      city?: string;
      state?: string;
      country?: string;
    };
    BillingAccountDTO: {
      /** Format: uuid */
      billingAccountId?: string;
      name?: string;
      email?: string;
      expensesPerContext?: { [key: string]: number };
      state?: string;
      vatNumber?: string;
      address?: components["schemas"]["Address"];
      stripeMessage?: string;
    };
    ApplicationDTO: {
      /** Format: int64 */
      id?: number;
      applicationId?: string;
      /** Format: uuid */
      accountId?: string;
      applicationName?: string;
      spaceId?: string;
      contextIds?: string[];
    };
    FluxServerSentEventApplicationDTO: {
      /** Format: int32 */
      prefetch?: number;
    };
    FluxServerSentEventSpaceDTO: {
      /** Format: int32 */
      prefetch?: number;
    };
    VersionInfo: {
      productName?: string;
      version?: string;
      lastBuildTime?: string;
    };
    ContextPriceCalculationResponseDTO: {
      pricePerContextType?: {
        [key: string]: components["schemas"]["ContextTypePrice"];
      };
    };
    ContextTypePrice: {
      monthlyBaseFee?: number;
      monthlyMessagesFee?: number;
      totalAmountPerMonth?: number;
      privateContext?: boolean;
    };
    ClusterPriceCalculationResponseDTO: {
      pricePerClusterType?: {
        [key: string]: components["schemas"]["ClusterTypePrice"];
      };
    };
    ClusterTypePrice: {
      monthlyFee?: number;
    };
    State: {
      code?: string;
      name?: string;
    };
    StatesDTO: {
      country?: string;
      states?: components["schemas"]["State"][];
    };
    CloudRegionsDTO: {
      code?: string;
      description?: string;
      clusterProvider?: string;
      priceCategory?: string;
      ecoFriendly?: boolean;
    };
    LoadBalanceStrategyDTO: {
      name?: string;
      label?: string;
    };
    CountriesDTO: {
      name?: string;
      code?: string;
      regions?: components["schemas"]["Region"][];
    };
    Region: {
      name?: string;
      acronym?: string;
      otherNames?: string[];
      otherAcronyms?: string[];
    };
    ContextTypeDTO: {
      name?: string;
      available?: boolean;
      description?: string;
      free?: boolean;
      perHour?: number;
      perMessage?: { [key: string]: number };
      private?: boolean;
      custom?: boolean;
    };
    ContextCloudProviderDTO: {
      name?: string;
      code?: string;
    };
    ClusterTypeDTO: {
      name?: string;
      description?: string;
    };
    ClusterRegionDTO: {
      code?: string;
      description?: string;
      clusterProvider?: string;
      priceCategory?: string;
      ecoFriendly?: boolean;
      active?: boolean;
    };
    ClusterProviderDTO: {
      code?: string;
      name?: string;
    };
    CloudProvidersDTO: {
      code?: string;
      name?: string;
    };
    PaymentProviderConfigDTO: {
      config?: { [key: string]: string };
    };
    FluxServerSentEventContextOverviewDTO: {
      /** Format: int32 */
      prefetch?: number;
    };
    ClientApplicationDTO: {
      name?: string;
      clients?: components["schemas"]["ClientDTO"][];
      commands?: string[];
      queries?: components["schemas"]["QueryDTO"][];
    };
    ClientDTO: {
      name?: string;
      node?: string;
      processors?: components["schemas"]["ProcessorDTO"][];
    };
    ContextOverviewDTO: {
      contextId?: string;
      contextName?: string;
      applications?: components["schemas"]["ClientApplicationDTO"][];
    };
    ProcessorDTO: {
      processorName?: string;
      mode?: string;
      /** Format: int32 */
      activeThreads?: number;
      running?: boolean;
      segmentStatus?: components["schemas"]["SegmentStatusDTO"][];
      tokenStoreIdentifier?: string;
      autoLoadBalanceStrategy?: string;
      streaming?: boolean;
    };
    QueryDTO: {
      request?: string;
      responseTypes?: string[];
    };
    SegmentStatusDTO: {
      caughtUp?: boolean;
      /** Format: int32 */
      onePartOf?: number;
      errorState?: string;
      replaying?: boolean;
      /** Format: int64 */
      tokenPosition?: number;
    };
    CreditsResponseDTO: {
      /** Format: uuid */
      creditsId?: string;
      /** Format: uuid */
      billingAccountId?: string;
      description?: string;
      amount?: number;
      balance?: number;
      currency?: string;
      /** Format: int32 */
      numberOfMonths?: number;
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      expirationDate?: string;
      /** @enum {string} */
      creditsStatus?: "AVAILABLE" | "EXPIRED" | "REMOVED";
    };
    ReplicationGroupDTO: {
      /** Format: int64 */
      id?: number;
      name?: string;
      contextType?: string;
      /** Format: int32 */
      contextsCreated?: number;
      region?: string;
      /** Format: uuid */
      clusterId?: string;
    };
    SaasUsageDTO: {
      /** Format: int64 */
      id?: number;
      /** Format: uuid */
      billingAccountId?: string;
      spaceId?: string;
      context?: string;
      contextType?: string;
      messagesUsed?: number;
      calculatedUsageCost?: number;
      calculatedHourlyCost?: number;
      /** Format: date-time */
      lastCalculationTime?: string;
      successfullySentToBilling?: boolean;
    };
    AccountBillingDetailsDTO: {
      /** Format: int64 */
      id?: number;
      /** Format: uuid */
      billingAccountId?: string;
      spaceId?: string;
      /** Format: date-time */
      lastInvoiceTime?: string;
    };
    AccountDTO: {
      /** Format: uuid */
      accountId?: string;
      externalAccountId?: string;
      details?: components["schemas"]["AccountData"];
      /** Format: date-time */
      creationDate?: string;
      /** @enum {string} */
      status?: "INACTIVE" | "ACTIVE" | "REMOVED";
    };
    FluxServerSentEventAccountDTO: {
      /** Format: int32 */
      prefetch?: number;
    };
    PersonalAccessTokenDTO: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      accountId?: string;
      email?: string;
      name?: string;
      /** Format: date-time */
      creationDate?: string;
      /** Format: date-time */
      lastUsedDate?: string;
    };
    DeleteCustomClusterRequestDTO: {
      spaceId?: string;
      /** Format: uuid */
      clusterId?: string;
    };
  };
}

export interface operations {
  replaceContext: {
    parameters: {
      path: {
        spaceId: string;
        contextId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  deleteContext: {
    parameters: {
      path: {
        spaceId: string;
        contextId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  updateAccount: {
    parameters: {
      path: {
        spaceId: string;
        billingAccountId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PaymentsResponseDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CustomerDTO"];
      };
    };
  };
  updateTermsAndConditionsPublicationDate: {
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TermsAndConditionsRequestDTO"];
      };
    };
  };
  getCurrentAccount: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["AccountDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  updateAccountData: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": { [key: string]: unknown };
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccountData"];
      };
    };
  };
  deleteCurrentAccount: {
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  create: {
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SpaceRequestDTO"];
      };
    };
  };
  generateInviteToSpace: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": string;
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["InviteRequestDTO"];
      };
    };
  };
  findContextsOfCurrentSpace: {
    parameters: {
      path: {
        spaceId: string;
      };
      query: {
        provisionedOnly?: boolean;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ContextDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  createContext: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContextRequestDTO"];
      };
    };
  };
  getCluster: {
    parameters: {
      path: {
        spaceId: string;
      };
      query: {
        createdOnly?: boolean;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ClusterDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  createCluster: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ClusterRequestDTO"];
      };
    };
  };
  pay: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MakePaymentDTO"];
      };
    };
  };
  createAccount: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PaymentsResponseDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CustomerDTO"];
      };
    };
  };
  authorize: {
    parameters: {
      path: {
        spaceId: string;
        billingAccountId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PaymentProviderResponseDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  findSpaceApplicationsOfCurrentUser: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ApplicationDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  create_1: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ApplicationTokenDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ApplicationRequestDTO"];
      };
    };
  };
  createCustomCluster: {
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateCustomClusterRequestDTO"];
      };
    };
  };
  deleteCustomCluster: {
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DeleteCustomClusterRequestDTO"];
      };
    };
  };
  addCredits: {
    parameters: {
      path: {
        billingAccountId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreditsRequestDto"];
      };
    };
  };
  recalculate: {
    parameters: {
      path: {
        spaceId: string;
        billingAccountId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  register: {
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccountData"];
      };
    };
  };
  generatePAT: {
    parameters: {
      query: {
        name: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": string;
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  transferSpaceOwnership: {
    parameters: {
      path: {
        spaceId: string;
        accountId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  grantPermissionForMemberInSpace: {
    parameters: {
      path: {
        spaceId: string;
        accountId: string;
        role: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  disableUserInSpace: {
    parameters: {
      path: {
        spaceId: string;
        accountId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  deactivateInviteForSpace: {
    parameters: {
      path: {
        spaceId: string;
        inviteId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  acceptInviteForSpace: {
    parameters: {
      path: {
        spaceId: string;
        inviteId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  bindContextsToApplication: {
    parameters: {
      path: {
        spaceId: string;
        id: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BindContextsToApplicationDTO"];
      };
    };
  };
  loadBalance: {
    parameters: {
      path: {
        processor: string;
      };
      query: {
        context: string;
        strategy: string;
        tokenStoreIdentifier: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["MonoVoid"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  autoLoadBalanceSetup: {
    parameters: {
      path: {
        processor: string;
      };
      query: {
        context: string;
        strategy: string;
        tokenStoreIdentifier: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["MonoVoid"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  start: {
    parameters: {
      path: {
        client: string;
        processor: string;
      };
      query: {
        context: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["MonoVoid"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  splitSegment: {
    parameters: {
      path: {
        client: string;
        processor: string;
      };
      query: {
        context: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["MonoVoid"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  mergeSegment: {
    parameters: {
      path: {
        client: string;
        processor: string;
      };
      query: {
        context: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["MonoVoid"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  pause: {
    parameters: {
      path: {
        client: string;
        processor: string;
      };
      query: {
        context: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["MonoVoid"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  dissociateAccountFromSpace: {
    parameters: {
      path: {
        spaceId: string;
        accountId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  associateAccountWithSpace: {
    parameters: {
      path: {
        spaceId: string;
        accountId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  generateInvoice: {
    parameters: {
      path: {
        spaceId: string;
        billingAccountId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getTermsAndConditionsPublicationDate: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TermsAndConditionsResponseDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  findSpaceById: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["SpaceDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  deleteSpace: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  statistics: {
    parameters: {
      path: {
        spaceId: string;
      };
      query: {
        hours?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["StatisticsDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  findSpaceName: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["SpaceNameDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getCurrentMember: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["SpaceMemberDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  dissociateCurrentAccountFromSpace: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getMembersFromSpace: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["SpaceMemberDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  findAllInvitesForSpace: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["SpaceInviteDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getCustomClustersBySpaceId: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["CustomClusterDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getCustomCluster: {
    parameters: {
      path: {
        spaceId: string;
        clusterId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["CustomClusterDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  updates: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "text/event-stream": components["schemas"]["FluxServerSentEventCustomClusterDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  findContextBySpaceAndId: {
    parameters: {
      path: {
        spaceId: string;
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ContextDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  updates_1: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "text/event-stream": components["schemas"]["FluxServerSentEventContextDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getCluster_1: {
    parameters: {
      path: {
        spaceId: string;
        clusterId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ClusterDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  deleteCluster: {
    parameters: {
      path: {
        spaceId: string;
        clusterId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getClusterContexts: {
    parameters: {
      path: {
        spaceId: string;
        clusterId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ContextDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  updates_2: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "text/event-stream": components["schemas"]["FluxServerSentEventClusterDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getHistory: {
    parameters: {
      path: {
        spaceId: string;
        billingAccountId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PaymentHistoryDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getCardDetails: {
    parameters: {
      path: {
        spaceId: string;
        billingAccountId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": string;
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getBillingAccountEntity: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["SpaceBillingDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getBillingAccount: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["BillingAccountDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getBillingAccount_1: {
    parameters: {
      path: {
        spaceId: string;
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["BillingAccountDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  findSpaceApplicationById: {
    parameters: {
      path: {
        spaceId: string;
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ApplicationDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  delete: {
    parameters: {
      path: {
        spaceId: string;
        id: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  applicationUpdates: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "text/event-stream": components["schemas"]["FluxServerSentEventApplicationDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  updates_3: {
    responses: {
      /** OK */
      200: {
        content: {
          "text/event-stream": components["schemas"]["FluxServerSentEventSpaceDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  findSpacesOfCurrentUser: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["SpaceDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  versionInfo: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["VersionInfo"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  calculateContextPrice: {
    parameters: {
      query: {
        numberOfMessages: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ContextPriceCalculationResponseDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  calculateClusterPrice: {
    parameters: {
      query: {
        region: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ClusterPriceCalculationResponseDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  refresh: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": string;
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  exchange: {
    parameters: {
      query: {
        email: string;
        pat: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": string;
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getUserApplicationConfig: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": { [key: string]: string };
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getStatesForCountry: {
    parameters: {
      path: {
        country: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["StatesDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getMemberRoles: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": ("ADMIN" | "DEVELOPER" | "VIEWER" | "NO_ROLE")[];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getRegionsByCloudProviders: {
    parameters: {
      path: {
        "cloud-provider": string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["CloudRegionsDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getLoadBalanceStrategies: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["LoadBalanceStrategyDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getCountries: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["CountriesDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  findContextTypes: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ContextTypeDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  findContextRegions: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": string[];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  findContextCloudProviders: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ContextCloudProviderDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getClusterTypes: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ClusterTypeDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  findClusterRegionsByProvider: {
    parameters: {
      path: {
        provider: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ClusterRegionDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getClusterProviders: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ClusterProviderDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getCloudProviders: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["CloudProvidersDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getPaymentProviderConfig: {
    parameters: {
      path: {
        provider: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PaymentProviderConfigDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  updates_4: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "text/event-stream": components["schemas"]["FluxServerSentEventContextOverviewDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getConnectedApplications: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ContextOverviewDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getCreditsBalanceByAccount: {
    parameters: {
      path: {
        billingAccountId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["CreditsResponseDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getCreditsBalanceByAccountAndCredit: {
    parameters: {
      path: {
        billingAccountId: string;
        creditsId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["CreditsResponseDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  applications: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ApplicationDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  spaces: {
    parameters: {
      query: {
        name?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["SpaceDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  replicationGroups: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ReplicationGroupDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getAllCustomClusters: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["CustomClusterDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  contexts: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ContextDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  clusters: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ClusterDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getAllUsage: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["SaasUsageDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getAllBillingAccounts: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["AccountBillingDetailsDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  getAllAccounts: {
    parameters: {
      query: {
        queryParameter?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["AccountDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  accountUpdates: {
    responses: {
      /** OK */
      200: {
        content: {
          "text/event-stream": components["schemas"]["FluxServerSentEventAccountDTO"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  listPAT: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PersonalAccessTokenDTO"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  removeBillingAccount: {
    parameters: {
      path: {
        spaceId: string;
        billingAccountId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  deleteSpaceByAdmin: {
    parameters: {
      path: {
        spaceId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  removeCredits: {
    parameters: {
      path: {
        billingAccountId: string;
        creditsId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  deleteAccount: {
    parameters: {
      path: {
        accountId: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
  deletePAT: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: {
        content: {
          "*/*": components["schemas"]["Error"];
        };
      };
      /** Internal Server Error */
      500: unknown;
    };
  };
}

export interface external {}
